package compiler;

public enum Err {

    EXTERNAL_DECLARATION("?J???O?@???i?]???O?¶M??i"),
    DECLARATION_SPECIFIER("??i??????????~"),
    STORAGE_CLASS_SPECIFIER("??i???x?s???O??????????~"),
    TYPE_SPECIFIER("??i????????????????~"),
    STRUCT_OR_UNION_SPECIFIER("struct??union???J???Oidentifer?]???O{"),
    STRUCT_OR_UNION("?J???Ostruct?]???Ounion"),
    SPECIFIER_QUALIFIER("?J???O????????????A?]???O???????w???"),
    STRUCT_DECLARATOR_LIST("?J???O???c??i?A?]???O???X"),
    STRUCT_DECLARATOR("?J???O??i?A?]???O?_???}?Y"),
    TYPE_QUALIFIER("??i?????????w??????~"),
    LOGICAL_OR_EXPRESSION("?Dlogical or??logical and??F???}?Y"),
    LOGICAL_AND_EXPRESSION("?Dlogical and??inclusive or??F???}?Y"),
    INCLUSIVE_OR_EXPRESSION("?Dexclusive or??inclusive or??F???}?Y"),
    EXCLUSIVE_OR_EXPRESSION("?Dand??exclusive or??F???}?Y"),
    AND_EXPRESSION("?Dand??equality??F???}?Y"),
    EQUALITY_ERROR("?D==?B?D!=???~"),
    EQUALITY_EXPRESSION("?Drelational??equality??F???}?Y"),
    RELATIONAL_ERROR("???Y??????~"),
    RELATIONAL_EXPRESSION("?Dshift??relational??F???}?Y"),
    SHIFT_ERROR("????????~"),
    SHIFT_EXPRESSION("?Dadditive??shift??F???}?Y"),
    ADDITIVE_ERROR("?D+?B?D-???~"),
    ADDITIVE_EXPRESSION("?Dmultiplicative??additive??F???}?Y"),
    MULTIPLICATIVE_ERROR("?D*?B?D/?B?D%???~"),
    MULTIPLICATIVE_EXPRESSION("?Dcast??multiplicative??F???}?Y"),
    CAST_EXPRESSION("?Dunary??F????(?}?Y"),
    SIZEOF_ERROR("?Dunary??F?????????W??"),
    UNARY_EXPRESSION("unary??F???}?Y???~");




    private String msg;

    Err(String msg) {

        this.msg = msg;
    }

    public static String errmsgs(Err err) {

        switch (err) {

        //case
        }

        return "asd";
    }
}
